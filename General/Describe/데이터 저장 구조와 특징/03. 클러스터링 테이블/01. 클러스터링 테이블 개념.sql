/** 클러스터링 테이블 개념
 *  대규모 운영 환경에서 데이터의 저장 방식은 성능 최적화의 핵심 이다.
 *  클러스터링 테이블(Clustered Table)은 물리적 저장 방식을 최적화하여 데이터 접근 속도를 극대화하는 기술 중 하나이다.
 * 
 *  1. 클러스터링 테이블이란?
 *  클러스터링 테이블(Clustered Table)이란 데이터를 특정 컬럼 값을 기준으로 물리적으로 함께 저장하는 방식을 의미
 *   ㅇ 일반적인 Heap Table은 데이터를 INSERT 순서대로 저장하며, 인덱스가 별도로 존재하여 추가적인 I/O가 필요하다.
 *	 ㅇ 반면 클러스터링 테이블은 같은 키 값을 가진 행들을 물리적으로 가까이 저장하여 I/O를 최적화하고 성능을 향상시킨다.
 *
 *  체크 포인트: 클러스터링 테이블은 데이터 접근 패턴을 고려한 테이블 구조이다.
 * 
 * 
 *  2. 클러스터링 테이블의 장단점
 * ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
 *  구분 | 설명
 * ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
 *  장점 | 동일한 키 값을 가지는 데이터에 대한 검색 및 조인이 빠름(예: 외래키 기반 JOIN이 많은 경우) 
 *		| 디스크 I/O 감소 - 관련 데이터가 같은 블록에 저장되므로 캐시 히트율이 높아짐
 *      | 범위 검색(RANGE SCAN)에 최적화됨 (예: 날짜별 데이터 분석)
 * ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
 *  단점 | INSERT/UPDATE/DELETE가 비효율적 - 새로운 데이터가 삽입될 때 재정렬(리오가제이션)이 필요할 수 있음
 *      | 랜덤 액세스 시 성능 저하 - 클러스터 키 외의 검색에는 성능 이점이 없음
 * ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
 * 
 * 
 * 3. 클러스터링 테이블 vs 일반 테이블(Heap Table) 비교
 *  
 */ 